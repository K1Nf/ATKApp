// <auto-generated />
using System;
using ATKApplication.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ATKApplication.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20250401142342_InsertingThemeList")]
    partial class InsertingThemeList
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ATKApplication.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Migrants")
                        .HasColumnType("integer");

                    b.Property<int?>("NotWorkingYouth")
                        .HasColumnType("integer");

                    b.Property<int?>("Registrated")
                        .HasColumnType("integer");

                    b.Property<int?>("Schools")
                        .HasColumnType("integer");

                    b.Property<int?>("Students")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkingYouth")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ATKApplication.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("EqualToEqualDescription")
                        .HasColumnType("text");

                    b.Property<int>("EventType")
                        .HasColumnType("integer");

                    b.Property<Guid>("FinanceId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBestPractice")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSystematic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsValuable")
                        .HasColumnType("boolean");

                    b.Property<int>("LevelType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("OrganizerId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ThemeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrganizerId");

                    b.HasIndex("ReportId");

                    b.HasIndex("ThemeId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ATKApplication.Models.FeedBack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<bool>("HasGuestionnaire")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasInternet")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasInterview")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasOpros")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasOther")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("ATKApplication.Models.Finance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<int?>("GranteBudget")
                        .HasColumnType("integer");

                    b.Property<int?>("MunicipalBudget")
                        .HasColumnType("integer");

                    b.Property<int?>("OtherBudget")
                        .HasColumnType("integer");

                    b.Property<int?>("RegionalBudget")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("Finances");
                });

            modelBuilder.Entity("ATKApplication.Models.InterAgencyCooperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<string>("Organization")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("InterAgencyCooperations");
                });

            modelBuilder.Entity("ATKApplication.Models.MediaLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("MediaLinks");
                });

            modelBuilder.Entity("ATKApplication.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MunicipalityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("ATKApplication.Models.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("ATKApplication.Models.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OrganizerId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrganizerId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("ATKApplication.Models.ReportAndEvent", b =>
                {
                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ReportId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("ReportAndEvents");
                });

            modelBuilder.Entity("ATKApplication.Models.Theme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Themes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32d0ec58-9f10-43f1-94a5-2a2560ba2bbd"),
                            Code = "1.1.1",
                            Description = "Проведение мероприятий, посвященных Дню защитника Отечества (23 февраля), Дню солидарности в борьбе с терроризмом (3 сентября), Дню Героев Отечества (9 декабря) с привлечением военнослужащих, сотрудников правоохранительных органов и гражданских лиц, участвовавших в борьбе с терроризмом, экспертов, журналистов, общественных деятелей, очевидцев террористических актов и пострадавших от действий террористов"
                        },
                        new
                        {
                            Id = new Guid("8b4bea31-8eaf-4e36-8506-bf19e09f95f8"),
                            Code = "1.1.2",
                            Description = "Присвоение улицам, скверам, школам и т.д. имен Героев Российской Федерации, а также иных лиц, отличившихся в борьбе с терроризмом, прежде всего с украинскими националистическими и неонацистскими военизированными формированиями, признанными террористическими организациями"
                        },
                        new
                        {
                            Id = new Guid("77104f30-ac1d-48b9-a214-420440505edc"),
                            Code = "1.1.3",
                            Description = "Участие в проекте «Парта героя»"
                        },
                        new
                        {
                            Id = new Guid("58d72565-3598-4754-abb2-e875d76f8b8c"),
                            Code = "1.2.1",
                            Description = "Проведение общественно-политических, воспитательных, просветительских, культурных, досуговых и спортивных мероприятий (круглые столы, акции памяти, встречи с лицами, отличившимися в борьбе с терроризмом и неонацизмом, профилактические беседы, кинопоказы, выставки, тематические викторины, спортивные турниры и др.) (далее – мероприятия), в содержание которых включена антитеррористическая тематика, с привлечением лидеров общественного мнения , общественных деятелей, представителей традиционных религиозных конфессий, общественных и социально ориентированных некоммерческих организаций, детских и молодежных движений (обществ, проектов)"
                        },
                        new
                        {
                            Id = new Guid("3bd9edcb-f24f-4f16-8c1c-f05d490902c9"),
                            Code = "1.3.1.1",
                            Description = "Проведение мероприятий (тематические лекции, семинары, викторины, кинопоказы, театрализованные постановки, встречи с лидерами общественного мнения и т.п.), направленных на разъяснение преступной сущности ТЕРРОРИСТИЧЕСКИХ, УКРАИНСКИХ НАЦИОНАЛИСТИЧЕСКИХ И НЕОНАЦИСТСКИХ ОРГАНИЗАЦИЙ"
                        },
                        new
                        {
                            Id = new Guid("7945a8df-1ca1-4468-986a-d9fe77af3c34"),
                            Code = "1.3.1.2",
                            Description = "Правовое просвещение обучающихся в сфере противодействия идеологии терроризма, в том числе доведение информации об ответственности за совершение преступлений террористической направленности, с привлечением представителей правоохранительных и контрольно-надзорных органов автономного округа (Управление МВД России по автономному округу, преподавателей кафедр (дисциплин) юридического профиля)"
                        },
                        new
                        {
                            Id = new Guid("4897d413-2d1b-45f5-a697-faf0c9bfe53c"),
                            Code = "1.3.2",
                            Description = "Актуализация (конкретизация) учебно-методических материалов (рабочих программ учебных дисциплин, рекомендаций по подготовке и проведению занятий, планов занятий, учебных пособий, курсов лекций, фондов оценочных средств) в целях решения учебно-воспитательных задач по формированию стойкого неприятия идеологии терроризма"
                        },
                        new
                        {
                            Id = new Guid("5e5321e9-435f-46df-884d-4c07d4cef15a"),
                            Code = "1.3.3.1",
                            Description = "Создание тематических площадок, мероприятий, направленных на разъяснение школьникам и молодежи преступной сущности террористической, украинской националистической и неонацистской идеологии при проведении форумов и конференций с привлечением лидеров общественного мнения, общественных деятелей, вернувшихся из зон боевых действий военных корреспондентов, сотрудников правоохранительных органов, военнослужащих и добровольцев"
                        },
                        new
                        {
                            Id = new Guid("890defb9-452e-4539-8742-10528b55b577"),
                            Code = "1.3.3.2",
                            Description = "Включение обучающихся и молодежи в организацию и проведение для своих сверстников мероприятий антитеррористической направленности"
                        },
                        new
                        {
                            Id = new Guid("239a96d3-174c-4e60-9130-4f9cd0918f2c"),
                            Code = "1.3.4",
                            Description = "Организация проведения студентами исследований и реализации творческих (художественных, театральных, журналистских, просветительских) проектов антитеррористического содержания (далее – проект), обеспечение участия их авторов в межвузовских, региональных и всероссийских конкурсах"
                        },
                        new
                        {
                            Id = new Guid("483927d6-a383-42a7-96fa-556338897f25"),
                            Code = "1.3.5",
                            Description = "Разработка и внедрение учебных, методических, информационно-разъяснительных и просветительских материалов (в установленной сфере деятельности) (далее – учебно-методические материалы) для использования в образовательном процессе и воспитательной работе с обучающимися образовательных организаций, прибывшими в автономный округ с территорий, ранее находившихся под контролем киевского режима"
                        },
                        new
                        {
                            Id = new Guid("0a07add4-8008-4945-81b2-67344676b36b"),
                            Code = "1.4",
                            Description = "Изъятие из библиотечных фондов изданий, содержащих информацию террористического, экстремистского и деструктивного характера, в том числе фальсифицирующую историю России на всех этапах ее становления и развития, дискредитирующую ее политику (далее – издания, содержащие материалы террористической направленности)"
                        },
                        new
                        {
                            Id = new Guid("361da32f-dbac-4c13-9f0e-eb360cbea86a"),
                            Code = "1.5.1",
                            Description = "Проведение общественными организациями, волонтерскими, военно-патриотическими, молодежными и детскими объединениями (в т.ч. Всероссийским детско-юношеским военно-патриотическим общественным движением «Юнармия», общероссийским общественно-государственным движением детей и молодежи «Движение Первых» и др.), а также службами примирения (медиации) по разрешению конфликтных ситуаций) (далее – общественная организация) мероприятий, направленных на формирование антитеррористического мировоззрения у школьников и молодежи"
                        },
                        new
                        {
                            Id = new Guid("00b67ca7-c93b-4d72-ba19-e9db4542d4cb"),
                            Code = "1.5.2",
                            Description = "Поддержка социально-значимых (культурно-просветительских, гуманитарных, спортивных) проектов, направленных на привитие населению неприятия идеологии терроризма, насилия и негативных социальных явлений"
                        },
                        new
                        {
                            Id = new Guid("bfe34f02-e5ae-4ed6-afa1-7c31a9344da4"),
                            Code = "1.6",
                            Description = "Анализ психологического климата в образовательных организациях, активности виртуальных деструктивных сообществ, динамики насильственных проявлений среди несовершеннолетних, по результатам которых: принимать меры, направленные на повышение качества организации и реализации воспитательных и профилактических мероприятий в конкретной образовательной организации, в том числе с привлечением учреждений молодежной политики, культуры и спорта; информировать Аппарат АТК автономного округа о принятых мерах"
                        },
                        new
                        {
                            Id = new Guid("6ffc76df-9461-4c39-a5a5-5c9de377c70c"),
                            Code = "2.1",
                            Description = "Профилактическая работа с лицами, отбывающими наказание в учреждениях УИС, расположенных в автономном округе, в том числе: ознакомление осужденных со средствами наглядной агитации, печатными и аудиовизуальными материалами антитеррористического содержания; проведение с привлечением представителей социально ориентированных некоммерческих и религиозных организаций информационно-просветительских мероприятий для: доведения информации об ответственности за совершение преступлений террористической направленности; продвижения тезиса о бесперспективности совершения террористических актов, к которым подстрекают международные террористические и радикальные организации, украинские спецслужбы, националистические и неонацистские структуры; дискредитации с точки зрения общепринятых норм религии, морали, истории и законов логики террористической идеологии, типичного социального образа террориста, а также террористической деятельности лидеров и участников (сторонников) международных террористических и украинских радикальных организаций"
                        },
                        new
                        {
                            Id = new Guid("55ac9039-17f1-4f01-84bc-11b524eb55b1"),
                            Code = "2.2",
                            Description = "Разъяснительная работа среди иностранных граждан, прибывших в Российскую Федерацию для осуществления трудовой деятельности, о: нормах законодательства Российской Федерации, устанавливающих ответственность за участие и содействие террористической деятельности, способах сообщения органам власти, уполномоченным рассматривать сообщения о преступлениях, сведений об известных фактах подготовки либо совершения преступлений террористической направленности и лицах, к ним причастных, на площадках консультационных пунктов адаптации мигрантов муниципальных образований автономного округа, автономной некоммерческой организации «Центр социальной и культурной адаптации и интеграции иностранных граждан» (г. Сургут), Дома дружбы народов (гг. Ханты-Мансийск, Сургут)"
                        },
                        new
                        {
                            Id = new Guid("5cc33ee0-0835-47e6-be08-0d922428da0e"),
                            Code = "2.3",
                            Description = "Разъяснение иностранным гражданам, прибывшим в Российскую Федерацию для обучения, традиционных российских духовно-нравственных ценностей, норм законодательства Российской Федерации, устанавливающих ответственность за участие и содействие террористической деятельности, разжигание социальной, национальной и религиозной розни, а также о правилах поведения в российском обществе"
                        },
                        new
                        {
                            Id = new Guid("84d55368-3946-4a14-b61a-fa7808491d36"),
                            Code = "2.4",
                            Description = "Формирование антитеррористического мировоззрения у детей трудовых мигрантов, привитие им традиционных российских духовно-нравственных ценностей , адаптация в школьных коллективах (далее – мероприятия), а также профилактический охват во внеурочное время"
                        },
                        new
                        {
                            Id = new Guid("66c9f1d4-b5a1-4c12-a7f2-2613892b7fb9"),
                            Code = "2.5",
                            Description = "Формирование антитеррористического мировоззрения у школьников и студентов, прибывающих из новых регионов Российской Федерации, их интеграция в учебные коллективы, привлечение к деятельности волонтерских движений, молодежных объединений (в т.ч. «Движение первых», «Юнармия»), студенческих структур (студенческие советы), в том числе культурно-досуговой направленности"
                        },
                        new
                        {
                            Id = new Guid("7ea88199-d8bb-4bfb-a1d0-b64f91351ee1"),
                            Code = "2.6",
                            Description = "Привлечение жителей новых субъектов Российской Федерации, прибывших в автономный округ, к волонтерской и иной социально полезной деятельности, в том числе антитеррористической направленности, способствующей привитию им традиционных российских духовно-нравственных ценностей"
                        },
                        new
                        {
                            Id = new Guid("4fd86146-7a22-4d35-8fe0-30fe93868118"),
                            Code = "2.7.1",
                            Description = "Интеграция в российское общество членов семей  лиц, причастных к террористической деятельности (действующих, осужденных, нейтрализованных), в том числе детей, возвращенных из Сирийской Арабской Республики, Республики Ирак и Пакистана, оказание им социальной, психологической и правовой помощи"
                        },
                        new
                        {
                            Id = new Guid("cd985edb-fdf9-4a30-a192-12eb8aa7f141"),
                            Code = "2.7.2",
                            Description = "Формирование антитеррористического мировоззрения у членов семей лиц, причастных к террористической деятельности (действующих, осужденных, нейтрализованных), в том числе детей, возвращенных из Сирийской Арабской Республики, Республики Ирак и Пакистана, привлечение их к волонтерской, военно-патриотической и иной социально полезной работе, общественно-политическим, воспитательным, просветительским, культурным, досуговым и спортивным мероприятиям, В ХОДЕ КОТОРОЙ РАЗЪЯСНЯТЬ ПРЕСТУПНУЮ СУЩНОСТЬ ТЕРРОРИСТИЧЕСКИХ И ИНЫХ РАДИКАЛЬНЫХ ОРГАНИЗАЦИЙ И ОТВЕТСТВЕННОСТЬ ЗА УЧАСТИЕ В ИХ ДЕЯТЕЛЬНОСТИ"
                        },
                        new
                        {
                            Id = new Guid("4fecb6e6-25b6-4c93-ada6-7e44fe3c4389"),
                            Code = "2.8",
                            Description = "Формирование антитеррористического мировоззрения у молодежи, состоящей на различных видах учета, привлечение к волонтерской, военно-патриотической и иной социально-полезной активности, в т.ч. АНТИТЕРРОРИСТИЧЕСКОЙ НАПРАВЛЕННОСТИ, участие в общественно-политических, воспитательных, просветительских, культурных, досуговых и спортивных мероприятиях, в ходе которых разъяснять преступную сущность террористических и иных радикальных организаций и ответственность за участие в их деятельности"
                        },
                        new
                        {
                            Id = new Guid("5e7f5f5e-03a4-4b08-b323-40b4e43ca0d1"),
                            Code = "3.1.1",
                            Description = "Проведение мероприятий по формированию антитеррористического мировоззрения среди лиц, осужденных за совершение преступлений террористической направленности"
                        },
                        new
                        {
                            Id = new Guid("bb27d6c6-cf61-457a-b9c2-b3e38363d173"),
                            Code = "3.1.2",
                            Description = "Привлечение психологов, членов семей, представителей общественных и религиозных организаций к проведению с лицами, осужденными за совершение преступлений террористической направленности, информационно-просветительских и воспитательных мероприятий по разъяснению традиционных российских духовно-нравственных ценностей, общественной опасности терроризма, бесперспективности террористических методов борьбы, правовой и моральной ответственности за участие в деятельности террористических организаций"
                        },
                        new
                        {
                            Id = new Guid("9c895f65-9623-4ab3-88d3-35b6eb6d14da"),
                            Code = "3.2.1",
                            Description = "Оказание социальной поддержки лицам, отбывшим наказание за участие в террористической деятельности"
                        },
                        new
                        {
                            Id = new Guid("9d365b8a-7df4-40a2-b841-d49fbfe79f53"),
                            Code = "3.2.2",
                            Description = "Проведение мероприятий информационно-разъяснительного характера с лицами, отбывшими наказание за участие в террористической деятельности"
                        },
                        new
                        {
                            Id = new Guid("589e488c-3dcd-436f-8c4f-13e32d29667b"),
                            Code = "3.2.3",
                            Description = "Ресоциализация и реинтеграция лиц, отбывших наказание за участие в террористической деятельности, в общество на основе их привлечения к профессиональной, общественной, волонтерской и иной социально-полезной деятельности"
                        },
                        new
                        {
                            Id = new Guid("cd6e46b3-5f0a-4abf-965b-f7cc47965f1b"),
                            Code = "3.3.1",
                            Description = "Проведение с лицами, отбывающими наказание за совершение преступлений террористической направленности, в том числе не связанное с лишением свободы, индивидуальных профилактических мероприятий, нацеленных на разъяснение преступной и античеловеческой сущности терроризма с привлечением психологов, представителей религиозных и общественных организаций"
                        },
                        new
                        {
                            Id = new Guid("6f5ee309-e316-4bf2-8f74-4d48f198a50d"),
                            Code = "3.3.2",
                            Description = "Привлечение деятельно раскаявшихся и отказавшихся от участия в террористической деятельности лиц к проведению профилактической работы, включая создание антитеррористического контента"
                        },
                        new
                        {
                            Id = new Guid("d10bb3bd-7054-468f-8eb5-41089ae86f16"),
                            Code = "3.4.1",
                            Description = "Выявление признаков подверженности радикализации обучающихся и студентов, в том числе несовершеннолетних получателей социальных услуг, деструктивным идеологиям, а также склонности к насильственному (агрессивному) и суицидальному поведению. Проведение психодиагностики обучающихся и студентов для определения лиц, склонных к суицидальному поведению, совершению насильственных действий или разделяющих деструктивную идеологию, испытывающих социально-бытовые проблемы и трудности в социализации в учебном коллективе (далее – лица, подверженные деструктивной идеологии), освоении учебных программ» (далее – психодиагностика)"
                        },
                        new
                        {
                            Id = new Guid("79d96b58-3867-411e-91ce-7b1e91586e8d"),
                            Code = "3.4.2",
                            Description = "Психолого-педагогическое сопровождение лиц, подверженных деструктивной идеологии, на основе результатов индивидуальных бесед, социально-психологического тестирования, социометрических исследований и иных форм психологической диагностики, педагогического наблюдения за изменениями в поведении обучающихся (в том числе связанных с социально-бытовыми проблемами и трудностями социализации в учебном коллективе, освоении образовательных программ), с привлечением кураторов из числа педагогического состава и студентов-наставников"
                        },
                        new
                        {
                            Id = new Guid("e8dce539-a0ac-4bb8-b34a-3b19d4d02eae"),
                            Code = "3.4.3",
                            Description = "Выявление деструктивных проявлений на страницах в социальных сетях и мессенджерах лицами, подверженными деструктивной идеологии, в том числе с использованием ресурсов Центра информационной безопасности и психологической помощи молодежи автономного округа"
                        },
                        new
                        {
                            Id = new Guid("49682ee3-c7ce-409d-8544-667ad8650b07"),
                            Code = "3.5",
                            Description = "Индивидуальные профилактические мероприятия в отношении подростков и детей, в том числе с признаками травмированной психики, находившихся под влиянием украинских националистических и неонацистских структур, а также проявляющих в социальных сетях и мессенджерах активный интерес к террористическому и деструктивному контенту радикальной, насильственной и суицидальной направленности"
                        },
                        new
                        {
                            Id = new Guid("5d865569-2284-480c-aa01-02d25983ac08"),
                            Code = "3.6",
                            Description = "Доведение до лиц, получивших религиозное образование за рубежом и имеющих намерения заниматься религиозной деятельностью в автономном округе, положения законодательства Российской Федерации, устанавливающие ответственность за участие и содействие террористической деятельности, несообщение о преступлении, а также содержание традиционных российских духовно-нравственных ценностей"
                        },
                        new
                        {
                            Id = new Guid("de8c402a-6490-4108-b511-101b54cc9446"),
                            Code = "4.1.1",
                            Description = "Размещение в СМИ и сети Интернет: информационных материалов, освещающих организацию и проведение мероприятий, указанных в строках 1.1.1, 1.3.1- 1.3.3.1, 1.5.2 Плана; контента, нацеленного на формирование негативного отношения к терроризму, украинскому национализму и неонацизму, а также неприятие идей массовых убийств, разъяснение социальной значимости профилактической деятельности органов власти и популяризацию лиц, отличившихся в борьбе с терроризмом"
                        },
                        new
                        {
                            Id = new Guid("53fd66c6-1e5b-4392-8cc3-a7100a06c826"),
                            Code = "4.1.3",
                            Description = "Создание и обеспечение функционирования электронного каталога антитеррористических материалов (текстовых, графических, аудио и видео) с предоставлением к нему свободного доступа прежде всего для использования при проведении общепрофилактических, адресных, индивидуальных и информационно-пропагандистских мероприятий"
                        },
                        new
                        {
                            Id = new Guid("3cebc899-7355-4014-821e-18d178bf9558"),
                            Code = "4.2",
                            Description = "Создание и распространение студенческими медиа-центрами (культурными, радио, театральными студиями, Кибердружинами и др.) антитеррористического контента, в том числе с использованием страниц в социальных сетях и мессенджеров образовательных организаций среднего профессионального образования и высшего образования (с привлечением обучающихся)"
                        },
                        new
                        {
                            Id = new Guid("c822c895-af9b-4149-b950-b41ca3c81917"),
                            Code = "4.3",
                            Description = "Оказание в условиях государственной (грантовой) поддержки проектов создания материалов, нацеленных на формирование у жителей автономного округа антитеррористического мировоззрения (теле- и радиопередач, игровых и неигровых фильмов, театральных постановок, выставок, буклетов, книжных изданий), распространяемых по наиболее популярным у населения, прежде всего молодежи, информационным каналам (с привлечением региональных и местных средств массовой информации, социально ориентированных некоммерческих организаций, религиозных и общественных организаций, продюсерских центров, творческих объединений и киностудий, администраторов популярных каналов в социальных сетях и мессенджеров (блогеров))"
                        },
                        new
                        {
                            Id = new Guid("ddf47dcf-4e93-49f3-ad4e-eef4d2a1dfe3"),
                            Code = "4.4",
                            Description = "Функционирование постоянно действующих выставочных экспозиций, посвященных землякам, которые проявили мужество и героизм, и активную гражданскую позицию в противостоянии с международными террористическими организациями, открытие памятников героям и включение данных памятных мест в экскурсионные программы"
                        },
                        new
                        {
                            Id = new Guid("92bec0b6-0ab1-4829-8e53-cb244905a912"),
                            Code = "4.5",
                            Description = "Производство и распространение антитеррористических материалов (текстовых, графических, аудио и видео, в том числе в форме социальной рекламы) о нормах законодательства, устанавливающих уголовную ответственность за участие и содействие террористическим организациям, прежде всего за несообщение о преступлении террористической направленности, через региональные и местные средства массовой информации и популярные каналы в социальных сетях и мессенджерах"
                        },
                        new
                        {
                            Id = new Guid("81d3aef7-af99-4690-bf56-f713cb9f2402"),
                            Code = "4.6",
                            Description = "Трансляция выступлений лиц, отказавшихся от участия в террористической деятельности, прежде всего отбывших либо отбывающих наказание за совершение преступлений террористической направленности, в средствах массовой информации, в том числе в информационно-телекоммуникационной сети Интернет"
                        },
                        new
                        {
                            Id = new Guid("a5a888fe-760c-49d8-bde1-dbe38dfd45b4"),
                            Code = "4.7",
                            Description = "Подготовка и распространение тематических материалов, разъясняющих несостоятельность доводов и фактов, оправдывающих террористическую деятельность, совершаемую украинскими националистами, неонацистами и их пособниками"
                        },
                        new
                        {
                            Id = new Guid("10e23844-4d8d-42a9-a758-9dd07ff0d8ef"),
                            Code = "4.8",
                            Description = "Выявление в информационно-телекоммуникационной сети Интернет материалов, имеющих признаки террористической, экстремистской и иной деструктивной направленности (видео, фото, аудио, текстовых), в том числе путем внедрения современных средств мониторинга, совершенствования форм и алгоритмов передачи сведений о страницах, содержащих противоправный контент, в уполномоченные органы"
                        },
                        new
                        {
                            Id = new Guid("d7c3ed42-d1d0-42e4-8590-e886ef56798b"),
                            Code = "5.2",
                            Description = "Проведение региональных и муниципальных обучающих мероприятий (конференции, форумы, семинары, «круглые столы», и др.) с последующим освещением их результатов на официальных сайтах, в социальных сетях и средствах массовой информации"
                        },
                        new
                        {
                            Id = new Guid("104eeda5-d2d6-4d8e-b08a-ac66920fc3c5"),
                            Code = "5.6",
                            Description = "Оказание государственной и муниципальной поддержки некоммерческим, общественным организациям, деятельность которых направлена на привлечение обучающихся и молодежи, состоящей на различных формах учета, к реализации социально значимых, культурно-просветительских, гуманитарных, спортивных проектов, способствующих формированию антитеррористического мировоззрения"
                        });
                });

            modelBuilder.Entity("ATKApplication.Models.Category", b =>
                {
                    b.HasOne("ATKApplication.Models.Event", "Event")
                        .WithOne("Category")
                        .HasForeignKey("ATKApplication.Models.Category", "EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ATKApplication.Models.Event", b =>
                {
                    b.HasOne("ATKApplication.Models.Organization", "Organizer")
                        .WithMany("Events")
                        .HasForeignKey("OrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATKApplication.Models.Report", null)
                        .WithMany("Events")
                        .HasForeignKey("ReportId");

                    b.HasOne("ATKApplication.Models.Theme", "Theme")
                        .WithMany("Events")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizer");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("ATKApplication.Models.FeedBack", b =>
                {
                    b.HasOne("ATKApplication.Models.Event", "Event")
                        .WithOne("FeedBack")
                        .HasForeignKey("ATKApplication.Models.FeedBack", "EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ATKApplication.Models.Finance", b =>
                {
                    b.HasOne("ATKApplication.Models.Event", "Event")
                        .WithOne("Finance")
                        .HasForeignKey("ATKApplication.Models.Finance", "EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ATKApplication.Models.InterAgencyCooperation", b =>
                {
                    b.HasOne("ATKApplication.Models.Event", "Event")
                        .WithMany("InterAgencyCooperations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ATKApplication.Models.MediaLink", b =>
                {
                    b.HasOne("ATKApplication.Models.Event", "Event")
                        .WithMany("MediaLinks")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ATKApplication.Models.Organization", b =>
                {
                    b.HasOne("ATKApplication.Models.Organization", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("ATKApplication.Models.Plan", b =>
                {
                    b.HasOne("ATKApplication.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ATKApplication.Models.Report", b =>
                {
                    b.HasOne("ATKApplication.Models.Organization", "Organizer")
                        .WithMany()
                        .HasForeignKey("OrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("ATKApplication.Models.ReportAndEvent", b =>
                {
                    b.HasOne("ATKApplication.Models.Event", "Event")
                        .WithMany("ReportAndEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATKApplication.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ATKApplication.Models.Event", b =>
                {
                    b.Navigation("Category");

                    b.Navigation("FeedBack");

                    b.Navigation("Finance");

                    b.Navigation("InterAgencyCooperations");

                    b.Navigation("MediaLinks");

                    b.Navigation("ReportAndEvents");
                });

            modelBuilder.Entity("ATKApplication.Models.Organization", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("ATKApplication.Models.Report", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("ATKApplication.Models.Theme", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
