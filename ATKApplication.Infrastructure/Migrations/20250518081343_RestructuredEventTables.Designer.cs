// <auto-generated />
using System;
using ATKApplication.Infrastructure.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ATKApplication.Infrastructure.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20250518081343_RestructuredEventTables")]
    partial class RestructuredEventTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ATKApplication.Domain.Models.Agreement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<int>("Organization")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Agreements");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CategoryEnum")
                        .HasColumnType("integer");

                    b.Property<int?>("Count")
                        .HasColumnType("integer");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Actor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("OrganizerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ThemeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrganizerId");

                    b.HasIndex("ThemeId");

                    b.ToTable("EventsBase", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.FeedBack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<bool>("HasGuestionnaire")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasInternet")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasInterview")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasOpros")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasOther")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.Finance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<int?>("GranteBudget")
                        .HasColumnType("integer");

                    b.Property<int?>("MunicipalBudget")
                        .HasColumnType("integer");

                    b.Property<int?>("OtherBudget")
                        .HasColumnType("integer");

                    b.Property<int?>("RegionalBudget")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("Finances");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.InterAgencyCooperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CoOpOrganiation")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<string>("Organization")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("InterAgencyCooperations");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.MediaLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("MediaLinks");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.Support", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Supports");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.Theme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Form")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Themes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8b54773-146e-4b82-8bf5-cf4097352777"),
                            Code = "1.1.1",
                            Description = "Проведение мероприятий, посвященных Дню защитника Отечества (23 февраля), Дню солидарности в борьбе с терроризмом (3 сентября), Дню Героев Отечества (9 декабря) с привлечением военнослужащих, сотрудников правоохранительных органов и гражданских лиц, участвовавших в борьбе с терроризмом, экспертов, журналистов, общественных деятелей, очевидцев террористических актов и пострадавших от действий террористов",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("1e6ed4d2-4a80-4977-b950-4dd4bc4e13be"),
                            Code = "1.1.2",
                            Description = "Присвоение улицам, скверам, школам и т.д. имен Героев Российской Федерации, а также иных лиц, отличившихся в борьбе с терроризмом, прежде всего с украинскими националистическими и неонацистскими военизированными формированиями, признанными террористическими организациями",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("15ecdca5-bc9a-4bac-add6-4839aadb577d"),
                            Code = "1.1.3",
                            Description = "Участие в проекте «Парта героя»",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("8de929b2-5513-4073-8dc0-b0f8848448f6"),
                            Code = "1.2.1",
                            Description = "Проведение общественно-политических, воспитательных, просветительских, культурных, досуговых и спортивных мероприятий (круглые столы, акции памяти, встречи с лицами, отличившимися в борьбе с терроризмом и неонацизмом, профилактические беседы, кинопоказы, выставки, тематические викторины, спортивные турниры и др.) (далее – мероприятия), в содержание которых включена антитеррористическая тематика, с привлечением лидеров общественного мнения , общественных деятелей, представителей традиционных религиозных конфессий, общественных и социально ориентированных некоммерческих организаций, детских и молодежных движений (обществ, проектов)",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("457bb2de-9721-4ba5-94b7-9106e6ca79f0"),
                            Code = "1.3.1.1",
                            Description = "Проведение мероприятий (тематические лекции, семинары, викторины, кинопоказы, театрализованные постановки, встречи с лидерами общественного мнения и т.п.), направленных на разъяснение преступной сущности ТЕРРОРИСТИЧЕСКИХ, УКРАИНСКИХ НАЦИОНАЛИСТИЧЕСКИХ И НЕОНАЦИСТСКИХ ОРГАНИЗАЦИЙ",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("0da687da-b1e4-46bb-8ebc-f0f0917c67ce"),
                            Code = "1.3.1.2",
                            Description = "Правовое просвещение обучающихся в сфере противодействия идеологии терроризма, в том числе доведение информации об ответственности за совершение преступлений террористической направленности, с привлечением представителей правоохранительных и контрольно-надзорных органов автономного округа (Управление МВД России по автономному округу, преподавателей кафедр (дисциплин) юридического профиля)",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("bb5c95d9-b56a-4bc6-aadc-f2c0ea77e47d"),
                            Code = "1.3.2",
                            Description = "Актуализация (конкретизация) учебно-методических материалов (рабочих программ учебных дисциплин, рекомендаций по подготовке и проведению занятий, планов занятий, учебных пособий, курсов лекций, фондов оценочных средств) в целях решения учебно-воспитательных задач по формированию стойкого неприятия идеологии терроризма",
                            Form = 2
                        },
                        new
                        {
                            Id = new Guid("74837a9a-abc6-48bd-a8d1-1db6a8966a2e"),
                            Code = "1.3.3.1",
                            Description = "Создание тематических площадок, мероприятий, направленных на разъяснение школьникам и молодежи преступной сущности террористической, украинской националистической и неонацистской идеологии при проведении форумов и конференций с привлечением лидеров общественного мнения, общественных деятелей, вернувшихся из зон боевых действий военных корреспондентов, сотрудников правоохранительных органов, военнослужащих и добровольцев",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("d9cc4fc4-f0a1-47fa-935a-b203977f2592"),
                            Code = "1.3.3.2",
                            Description = "Включение обучающихся и молодежи в организацию и проведение для своих сверстников мероприятий антитеррористической направленности",
                            Form = 10
                        },
                        new
                        {
                            Id = new Guid("b4dcd98e-30e7-4cd7-a2f0-0b6d06fa0aa5"),
                            Code = "1.3.4",
                            Description = "Организация проведения студентами исследований и реализации творческих (художественных, театральных, журналистских, просветительских) проектов антитеррористического содержания (далее – проект), обеспечение участия их авторов в межвузовских, региональных и всероссийских конкурсах",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("3c8df4e8-85db-4a0a-8bd0-7905e93b76a0"),
                            Code = "1.3.5",
                            Description = "Разработка и внедрение учебных, методических, информационно-разъяснительных и просветительских материалов (в установленной сфере деятельности) (далее – учебно-методические материалы) для использования в образовательном процессе и воспитательной работе с обучающимися образовательных организаций, прибывшими в автономный округ с территорий, ранее находившихся под контролем киевского режима",
                            Form = 5
                        },
                        new
                        {
                            Id = new Guid("384c9b07-73c6-4783-94f9-e9b86278ab0d"),
                            Code = "1.4",
                            Description = "Изъятие из библиотечных фондов изданий, содержащих информацию террористического, экстремистского и деструктивного характера, в том числе фальсифицирующую историю России на всех этапах ее становления и развития, дискредитирующую ее политику (далее – издания, содержащие материалы террористической направленности)",
                            Form = 4
                        },
                        new
                        {
                            Id = new Guid("450b8587-c2c6-486b-81f9-b44abb7e640d"),
                            Code = "1.5.1",
                            Description = "Проведение общественными организациями, волонтерскими, военно-патриотическими, молодежными и детскими объединениями (в т.ч. Всероссийским детско-юношеским военно-патриотическим общественным движением «Юнармия», общероссийским общественно-государственным движением детей и молодежи «Движение Первых» и др.), а также службами примирения (медиации) по разрешению конфликтных ситуаций) (далее – общественная организация) мероприятий, направленных на формирование антитеррористического мировоззрения у школьников и молодежи",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("78e55d9a-c50f-4c61-98e8-1497a83bcd19"),
                            Code = "1.5.2",
                            Description = "Поддержка социально-значимых (культурно-просветительских, гуманитарных, спортивных) проектов, направленных на привитие населению неприятия идеологии терроризма, насилия и негативных социальных явлений",
                            Form = 10
                        },
                        new
                        {
                            Id = new Guid("cf306c08-5335-4552-b934-bf60862f4232"),
                            Code = "1.6",
                            Description = "Анализ психологического климата в образовательных организациях, активности виртуальных деструктивных сообществ, динамики насильственных проявлений среди несовершеннолетних, по результатам которых: принимать меры, направленные на повышение качества организации и реализации воспитательных и профилактических мероприятий в конкретной образовательной организации, в том числе с привлечением учреждений молодежной политики, культуры и спорта; информировать Аппарат АТК автономного округа о принятых мерах",
                            Form = 0
                        },
                        new
                        {
                            Id = new Guid("310e8b9e-158c-4ab9-99e2-d81b6a4b8545"),
                            Code = "2.1",
                            Description = "Профилактическая работа с лицами, отбывающими наказание в учреждениях УИС, расположенных в автономном округе, в том числе: ознакомление осужденных со средствами наглядной агитации, печатными и аудиовизуальными материалами антитеррористического содержания; проведение с привлечением представителей социально ориентированных некоммерческих и религиозных организаций информационно-просветительских мероприятий для: доведения информации об ответственности за совершение преступлений террористической направленности; продвижения тезиса о бесперспективности совершения террористических актов, к которым подстрекают международные террористические и радикальные организации, украинские спецслужбы, националистические и неонацистские структуры; дискредитации с точки зрения общепринятых норм религии, морали, истории и законов логики террористической идеологии, типичного социального образа террориста, а также террористической деятельности лидеров и участников (сторонников) международных террористических и украинских радикальных организаций",
                            Form = 0
                        },
                        new
                        {
                            Id = new Guid("d816173a-2a6b-43ed-a627-3764001a58df"),
                            Code = "2.2",
                            Description = "Разъяснительная работа среди иностранных граждан, прибывших в Российскую Федерацию для осуществления трудовой деятельности, о: нормах законодательства Российской Федерации, устанавливающих ответственность за участие и содействие террористической деятельности, способах сообщения органам власти, уполномоченным рассматривать сообщения о преступлениях, сведений об известных фактах подготовки либо совершения преступлений террористической направленности и лицах, к ним причастных, на площадках консультационных пунктов адаптации мигрантов муниципальных образований автономного округа, автономной некоммерческой организации «Центр социальной и культурной адаптации и интеграции иностранных граждан» (г. Сургут), Дома дружбы народов (гг. Ханты-Мансийск, Сургут)",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("9b55c699-fd64-4800-aa60-3f3ea4228d97"),
                            Code = "2.3",
                            Description = "Разъяснение иностранным гражданам, прибывшим в Российскую Федерацию для обучения, традиционных российских духовно-нравственных ценностей, норм законодательства Российской Федерации, устанавливающих ответственность за участие и содействие террористической деятельности, разжигание социальной, национальной и религиозной розни, а также о правилах поведения в российском обществе",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("0b54267f-b1fb-42f1-af68-7eabe8e9d9ba"),
                            Code = "2.4",
                            Description = "Формирование антитеррористического мировоззрения у детей трудовых мигрантов, привитие им традиционных российских духовно-нравственных ценностей , адаптация в школьных коллективах (далее – мероприятия), а также профилактический охват во внеурочное время",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("d8f3460f-1c3b-486a-89b3-5447185db5c9"),
                            Code = "2.5",
                            Description = "Формирование антитеррористического мировоззрения у школьников и студентов, прибывающих из новых регионов Российской Федерации, их интеграция в учебные коллективы, привлечение к деятельности волонтерских движений, молодежных объединений (в т.ч. «Движение первых», «Юнармия»), студенческих структур (студенческие советы), в том числе культурно-досуговой направленности",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("61b3e336-5cb2-4a13-a383-d02ce661deb6"),
                            Code = "2.6",
                            Description = "Привлечение жителей новых субъектов Российской Федерации, прибывших в автономный округ, к волонтерской и иной социально полезной деятельности, в том числе антитеррористической направленности, способствующей привитию им традиционных российских духовно-нравственных ценностей",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("cd8fa9f4-dfef-467b-938c-3eed22328fec"),
                            Code = "2.7.1",
                            Description = "Интеграция в российское общество членов семей  лиц, причастных к террористической деятельности (действующих, осужденных, нейтрализованных), в том числе детей, возвращенных из Сирийской Арабской Республики, Республики Ирак и Пакистана, оказание им социальной, психологической и правовой помощи",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("b015b2f7-416c-4468-beb4-6e2ca541f355"),
                            Code = "2.7.2",
                            Description = "Формирование антитеррористического мировоззрения у членов семей лиц, причастных к террористической деятельности (действующих, осужденных, нейтрализованных), в том числе детей, возвращенных из Сирийской Арабской Республики, Республики Ирак и Пакистана, привлечение их к волонтерской, военно-патриотической и иной социально полезной работе, общественно-политическим, воспитательным, просветительским, культурным, досуговым и спортивным мероприятиям, В ХОДЕ КОТОРОЙ РАЗЪЯСНЯТЬ ПРЕСТУПНУЮ СУЩНОСТЬ ТЕРРОРИСТИЧЕСКИХ И ИНЫХ РАДИКАЛЬНЫХ ОРГАНИЗАЦИЙ И ОТВЕТСТВЕННОСТЬ ЗА УЧАСТИЕ В ИХ ДЕЯТЕЛЬНОСТИ",
                            Form = 2
                        },
                        new
                        {
                            Id = new Guid("e5ac0a2a-6071-4525-b39c-63e75fad3924"),
                            Code = "2.8",
                            Description = "Формирование антитеррористического мировоззрения у молодежи, состоящей на различных видах учета, привлечение к волонтерской, военно-патриотической и иной социально-полезной активности, в т.ч. АНТИТЕРРОРИСТИЧЕСКОЙ НАПРАВЛЕННОСТИ, участие в общественно-политических, воспитательных, просветительских, культурных, досуговых и спортивных мероприятиях, в ходе которых разъяснять преступную сущность террористических и иных радикальных организаций и ответственность за участие в их деятельности",
                            Form = 10
                        },
                        new
                        {
                            Id = new Guid("89f57491-5936-4724-ab60-a8291fd22e09"),
                            Code = "3.1.1",
                            Description = "Проведение мероприятий по формированию антитеррористического мировоззрения среди лиц, осужденных за совершение преступлений террористической направленности",
                            Form = 0
                        },
                        new
                        {
                            Id = new Guid("e77ae357-3b47-4375-a049-d4531bb02db3"),
                            Code = "3.1.2",
                            Description = "Привлечение психологов, членов семей, представителей общественных и религиозных организаций к проведению с лицами, осужденными за совершение преступлений террористической направленности, информационно-просветительских и воспитательных мероприятий по разъяснению традиционных российских духовно-нравственных ценностей, общественной опасности терроризма, бесперспективности террористических методов борьбы, правовой и моральной ответственности за участие в деятельности террористических организаций",
                            Form = 0
                        },
                        new
                        {
                            Id = new Guid("8b72623f-3cdd-47fc-a8ac-a19d6bc99e08"),
                            Code = "3.2.1",
                            Description = "Оказание социальной поддержки лицам, отбывшим наказание за участие в террористической деятельности",
                            Form = 2
                        },
                        new
                        {
                            Id = new Guid("c1cb6f65-d400-4f79-a90d-a0ff44d4240d"),
                            Code = "3.2.2",
                            Description = "Проведение мероприятий информационно-разъяснительного характера с лицами, отбывшими наказание за участие в террористической деятельности",
                            Form = 2
                        },
                        new
                        {
                            Id = new Guid("d64b1e37-8f1c-4e98-bd3e-c1d9eec7374c"),
                            Code = "3.2.3",
                            Description = "Ресоциализация и реинтеграция лиц, отбывших наказание за участие в террористической деятельности, в общество на основе их привлечения к профессиональной, общественной, волонтерской и иной социально-полезной деятельности",
                            Form = 0
                        },
                        new
                        {
                            Id = new Guid("fc84290a-44e5-42f9-9c7c-e1aa8d2e8cc1"),
                            Code = "3.3.1",
                            Description = "Проведение с лицами, отбывающими наказание за совершение преступлений террористической направленности, в том числе не связанное с лишением свободы, индивидуальных профилактических мероприятий, нацеленных на разъяснение преступной и античеловеческой сущности терроризма с привлечением психологов, представителей религиозных и общественных организаций",
                            Form = 0
                        },
                        new
                        {
                            Id = new Guid("2b8030c7-e2c7-4723-98c3-cb1d2d5f52fb"),
                            Code = "3.3.2",
                            Description = "Привлечение деятельно раскаявшихся и отказавшихся от участия в террористической деятельности лиц к проведению профилактической работы, включая создание антитеррористического контента",
                            Form = 0
                        },
                        new
                        {
                            Id = new Guid("aeab6d78-670e-4f2c-b18c-e39b7b5bcb7d"),
                            Code = "3.4.1",
                            Description = "Выявление признаков подверженности радикализации обучающихся и студентов, в том числе несовершеннолетних получателей социальных услуг, деструктивным идеологиям, а также склонности к насильственному (агрессивному) и суицидальному поведению. Проведение психодиагностики обучающихся и студентов для определения лиц, склонных к суицидальному поведению, совершению насильственных действий или разделяющих деструктивную идеологию, испытывающих социально-бытовые проблемы и трудности в социализации в учебном коллективе (далее – лица, подверженные деструктивной идеологии), освоении учебных программ» (далее – психодиагностика)",
                            Form = 2
                        },
                        new
                        {
                            Id = new Guid("513ac777-e10d-4230-bede-7109b8fc077e"),
                            Code = "3.4.2",
                            Description = "Психолого-педагогическое сопровождение лиц, подверженных деструктивной идеологии, на основе результатов индивидуальных бесед, социально-психологического тестирования, социометрических исследований и иных форм психологической диагностики, педагогического наблюдения за изменениями в поведении обучающихся (в том числе связанных с социально-бытовыми проблемами и трудностями социализации в учебном коллективе, освоении образовательных программ), с привлечением кураторов из числа педагогического состава и студентов-наставников",
                            Form = 2
                        },
                        new
                        {
                            Id = new Guid("b16305d6-50ff-4693-a2cd-3a3298349331"),
                            Code = "3.4.3",
                            Description = "Выявление деструктивных проявлений на страницах в социальных сетях и мессенджерах лицами, подверженными деструктивной идеологии, в том числе с использованием ресурсов Центра информационной безопасности и психологической помощи молодежи автономного округа",
                            Form = 2
                        },
                        new
                        {
                            Id = new Guid("49747362-503d-4984-ae0a-c97fc3ae00d6"),
                            Code = "3.5",
                            Description = "Индивидуальные профилактические мероприятия в отношении подростков и детей, в том числе с признаками травмированной психики, находившихся под влиянием украинских националистических и неонацистских структур, а также проявляющих в социальных сетях и мессенджерах активный интерес к террористическому и деструктивному контенту радикальной, насильственной и суицидальной направленности",
                            Form = 2
                        },
                        new
                        {
                            Id = new Guid("9a810df1-0325-4768-8432-a741dd104770"),
                            Code = "3.6",
                            Description = "Доведение до лиц, получивших религиозное образование за рубежом и имеющих намерения заниматься религиозной деятельностью в автономном округе, положения законодательства Российской Федерации, устанавливающие ответственность за участие и содействие террористической деятельности, несообщение о преступлении, а также содержание традиционных российских духовно-нравственных ценностей",
                            Form = 2
                        },
                        new
                        {
                            Id = new Guid("b70fe433-7daa-4ab0-bf41-de266462ad73"),
                            Code = "4.1.1",
                            Description = "Размещение в СМИ и сети Интернет: информационных материалов, освещающих организацию и проведение мероприятий, указанных в строках 1.1.1, 1.3.1- 1.3.3.1, 1.5.2 Плана; контента, нацеленного на формирование негативного отношения к терроризму, украинскому национализму и неонацизму, а также неприятие идей массовых убийств, разъяснение социальной значимости профилактической деятельности органов власти и популяризацию лиц, отличившихся в борьбе с терроризмом",
                            Form = 10
                        },
                        new
                        {
                            Id = new Guid("925ec770-c7c7-455f-9719-4d571323546d"),
                            Code = "4.1.3",
                            Description = "Создание и обеспечение функционирования электронного каталога антитеррористических материалов (текстовых, графических, аудио и видео) с предоставлением к нему свободного доступа прежде всего для использования при проведении общепрофилактических, адресных, индивидуальных и информационно-пропагандистских мероприятий",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("a3e78f68-ff03-4889-8d17-ffae8b7e97e7"),
                            Code = "4.2",
                            Description = "Создание и распространение студенческими медиа-центрами (культурными, радио, театральными студиями, Кибердружинами и др.) антитеррористического контента, в том числе с использованием страниц в социальных сетях и мессенджеров образовательных организаций среднего профессионального образования и высшего образования (с привлечением обучающихся)",
                            Form = 2
                        },
                        new
                        {
                            Id = new Guid("8ce686fc-c4ad-47be-b6ac-f4510f2b0bd8"),
                            Code = "4.3",
                            Description = "Оказание в условиях государственной (грантовой) поддержки проектов создания материалов, нацеленных на формирование у жителей автономного округа антитеррористического мировоззрения (теле- и радиопередач, игровых и неигровых фильмов, театральных постановок, выставок, буклетов, книжных изданий), распространяемых по наиболее популярным у населения, прежде всего молодежи, информационным каналам (с привлечением региональных и местных средств массовой информации, социально ориентированных некоммерческих организаций, религиозных и общественных организаций, продюсерских центров, творческих объединений и киностудий, администраторов популярных каналов в социальных сетях и мессенджеров (блогеров))",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("9c1abe2d-0532-4ed6-b50b-cf8a579486dc"),
                            Code = "4.4",
                            Description = "Функционирование постоянно действующих выставочных экспозиций, посвященных землякам, которые проявили мужество и героизм, и активную гражданскую позицию в противостоянии с международными террористическими организациями, открытие памятников героям и включение данных памятных мест в экскурсионные программы",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("9185f5a6-ad87-4199-9513-f6963f96b8c9"),
                            Code = "4.5",
                            Description = "Производство и распространение антитеррористических материалов (текстовых, графических, аудио и видео, в том числе в форме социальной рекламы) о нормах законодательства, устанавливающих уголовную ответственность за участие и содействие террористическим организациям, прежде всего за несообщение о преступлении террористической направленности, через региональные и местные средства массовой информации и популярные каналы в социальных сетях и мессенджерах",
                            Form = 5
                        },
                        new
                        {
                            Id = new Guid("e3812226-0777-4acd-91de-17d23e248b1e"),
                            Code = "4.6",
                            Description = "Трансляция выступлений лиц, отказавшихся от участия в террористической деятельности, прежде всего отбывших либо отбывающих наказание за совершение преступлений террористической направленности, в средствах массовой информации, в том числе в информационно-телекоммуникационной сети Интернет",
                            Form = 5
                        },
                        new
                        {
                            Id = new Guid("cf41bd46-bcd4-4bbd-8c10-1aae47640cb7"),
                            Code = "4.7",
                            Description = "Подготовка и распространение тематических материалов, разъясняющих несостоятельность доводов и фактов, оправдывающих террористическую деятельность, совершаемую украинскими националистами, неонацистами и их пособниками",
                            Form = 5
                        },
                        new
                        {
                            Id = new Guid("55c7071d-518b-4309-8920-323f3ef18c05"),
                            Code = "4.8",
                            Description = "Выявление в информационно-телекоммуникационной сети Интернет материалов, имеющих признаки террористической, экстремистской и иной деструктивной направленности (видео, фото, аудио, текстовых), в том числе путем внедрения современных средств мониторинга, совершенствования форм и алгоритмов передачи сведений о страницах, содержащих противоправный контент, в уполномоченные органы",
                            Form = 4
                        },
                        new
                        {
                            Id = new Guid("03344859-02a6-4dba-9072-6b2d94a327f4"),
                            Code = "5.1.2",
                            Description = "Описание темы 5.1.2",
                            Form = 0
                        },
                        new
                        {
                            Id = new Guid("981c9ee0-18c3-4102-b0fc-8a40bffc28f5"),
                            Code = "5.1.3",
                            Description = "Описание темы 5.1.3",
                            Form = 0
                        },
                        new
                        {
                            Id = new Guid("360f3dbb-d687-4608-84e6-8b0a730481a1"),
                            Code = "5.1.4",
                            Description = "Описание темы 5.1.4",
                            Form = 3
                        },
                        new
                        {
                            Id = new Guid("ef632006-8eef-4eec-b48b-fc5cc0ede6b4"),
                            Code = "5.2",
                            Description = "Проведение региональных и муниципальных обучающих мероприятий (конференции, форумы, семинары, «круглые столы», и др.) с последующим освещением их результатов на официальных сайтах, в социальных сетях и средствах массовой информации",
                            Form = 1
                        },
                        new
                        {
                            Id = new Guid("ad134bf8-79cd-4c06-b28b-f3b57aaed257"),
                            Code = "5.3",
                            Description = "Описание темы 5.3",
                            Form = 2
                        },
                        new
                        {
                            Id = new Guid("ac04cb1f-6ff4-4564-981c-ea404678a93a"),
                            Code = "5.6",
                            Description = "Оказание государственной и муниципальной поддержки некоммерческим, общественным организациям, деятельность которых направлена на привлечение обучающихся и молодежи, состоящей на различных формах учета, к реализации социально значимых, культурно-просветительских, гуманитарных, спортивных проектов, способствующих формированию антитеррористического мировоззрения",
                            Form = 1
                        });
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventForm1", b =>
                {
                    b.HasBaseType("ATKApplication.Domain.Models.EventBase");

                    b.Property<string>("Decision")
                        .HasColumnType("text");

                    b.Property<string>("EqualToEqualDescription")
                        .HasColumnType("text");

                    b.Property<int>("EventType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsBestPractice")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsValuable")
                        .HasColumnType("boolean");

                    b.Property<int>("LevelType")
                        .HasColumnType("integer");

                    b.Property<string>("Result")
                        .HasColumnType("text");

                    b.Property<Guid?>("SupportId")
                        .HasColumnType("uuid");

                    b.HasIndex("SupportId");

                    b.ToTable("EventsForm1", (string)null);
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventForm2", b =>
                {
                    b.HasBaseType("ATKApplication.Domain.Models.EventBase");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Participant")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResultDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("EventsForm2", (string)null);
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventForm3", b =>
                {
                    b.HasBaseType("ATKApplication.Domain.Models.EventBase");

                    b.Property<string>("Direct")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaterialsCount")
                        .HasColumnType("integer");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("EventsForm3", (string)null);
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventForm4", b =>
                {
                    b.HasBaseType("ATKApplication.Domain.Models.EventBase");

                    b.Property<bool>("DirectToNAC")
                        .HasColumnType("boolean");

                    b.Property<string>("DirectToSubjects")
                        .HasColumnType("text");

                    b.Property<string>("EqualToEqual")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("EventsForm4", (string)null);
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.Agreement", b =>
                {
                    b.HasOne("ATKApplication.Domain.Models.EventForm4", "Event")
                        .WithMany("Agreements")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.Category", b =>
                {
                    b.HasOne("ATKApplication.Domain.Models.EventBase", "Event")
                        .WithMany("Categories")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventBase", b =>
                {
                    b.HasOne("ATKApplication.Domain.Models.Organization", "Organizer")
                        .WithMany("Events")
                        .HasForeignKey("OrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATKApplication.Domain.Models.Theme", "Theme")
                        .WithMany("Events")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizer");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.FeedBack", b =>
                {
                    b.HasOne("ATKApplication.Domain.Models.EventForm1", "Event")
                        .WithOne("FeedBack")
                        .HasForeignKey("ATKApplication.Domain.Models.FeedBack", "EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.Finance", b =>
                {
                    b.HasOne("ATKApplication.Domain.Models.EventForm1", "Event")
                        .WithOne("Finance")
                        .HasForeignKey("ATKApplication.Domain.Models.Finance", "EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.InterAgencyCooperation", b =>
                {
                    b.HasOne("ATKApplication.Domain.Models.EventForm1", "Event")
                        .WithMany("InterAgencyCooperations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.MediaLink", b =>
                {
                    b.HasOne("ATKApplication.Domain.Models.EventBase", "Event")
                        .WithMany("MediaLinks")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.Support", b =>
                {
                    b.HasOne("ATKApplication.Domain.Models.EventBase", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventForm1", b =>
                {
                    b.HasOne("ATKApplication.Domain.Models.EventBase", null)
                        .WithOne()
                        .HasForeignKey("ATKApplication.Domain.Models.EventForm1", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATKApplication.Domain.Models.Support", "Support")
                        .WithMany()
                        .HasForeignKey("SupportId");

                    b.Navigation("Support");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventForm2", b =>
                {
                    b.HasOne("ATKApplication.Domain.Models.EventBase", null)
                        .WithOne()
                        .HasForeignKey("ATKApplication.Domain.Models.EventForm2", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventForm3", b =>
                {
                    b.HasOne("ATKApplication.Domain.Models.EventBase", null)
                        .WithOne()
                        .HasForeignKey("ATKApplication.Domain.Models.EventForm3", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventForm4", b =>
                {
                    b.HasOne("ATKApplication.Domain.Models.EventBase", null)
                        .WithOne()
                        .HasForeignKey("ATKApplication.Domain.Models.EventForm4", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventBase", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("MediaLinks");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.Organization", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.Theme", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventForm1", b =>
                {
                    b.Navigation("FeedBack");

                    b.Navigation("Finance");

                    b.Navigation("InterAgencyCooperations");
                });

            modelBuilder.Entity("ATKApplication.Domain.Models.EventForm4", b =>
                {
                    b.Navigation("Agreements");
                });
#pragma warning restore 612, 618
        }
    }
}
