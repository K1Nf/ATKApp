import React, { useState, useEffect } from 'react';
import "../components/EventForm.css";
import toastr from 'toastr';
import 'toastr/build/toastr.min.css';

const Login = () => {
  const [selectedOrganization, setSelectedOrganization] = useState('');
  const [password, setPassword] = useState('');

  const [municipaslOrganizations, setMunicipaslOrganizations] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // üîß –ó–∞–≥–ª—É—à–∫–∞: —Å–ø–∏—Å–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π (–≤ –±—É–¥—É—â–µ–º –ø—Ä–∏–¥—ë—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞)
  // const organizations = [
  //   { id: 'org1', name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –≥–æ—Ä–æ–¥–∞' },
  //   { id: 'org2', name: '–®–∫–æ–ª–∞ ‚Ññ12' },
  //   { id: 'org3', name: '–¶–µ–Ω—Ç—Ä –º–æ–ª–æ–¥—ë–∂–∏' },
  //   { id: 'org4', name: '–ö—Ä–∞–µ–≤–æ–π —Ç–µ–∞—Ç—Ä' },
  //   { id: 'org5', name: '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –Æ–ì–£' },
  // ];

  useEffect(() => {
      // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
      const fetchData = async () => {
        const urlBack = "/api/ref/auth/organizations";
        try {
          const response = await fetch(urlBack); // –ü—Ä–∏–º–µ—Ä URL
          if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö');
          }
          const result = await response.json();
          console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:", result);
  
          // const normalized = result.map(event => ({
          //   ...event,
          //   date: normalizeDate(event.date)
          // }));
  
          setMunicipaslOrganizations(result);
        } catch (error) {
          setError(error.message); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
        } finally {
          setLoading(false); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏
        }
      };
  
      fetchData(); // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞


  // ‚ùó –í–∫–ª—é—á–∏—Ç—å –ø–æ–∑–∂–µ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ API
  /*
  useEffect(() => {
    const fetchOrganizations = async () => {
      try {
        const response = await fetch('/api/ref/organizations');
        if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π');
        const data = await response.json();
        setOrganizations(data);
      } catch (err) {
        toastr.error(err.message, '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
      }
    };
    fetchOrganizations();
  }, []);
  */

  if (loading) {
    return loading;
  }

  // –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ ‚Äî —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
  if (error) {
    return error;
  }

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!selectedOrganization || !password.trim()) {
      toastr.error('–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –∏ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å', '–û—à–∏–±–∫–∞');
      return;
    }

    if (password.length < 4) {
      toastr.error('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 4 —Å–∏–º–≤–æ–ª–∞', '–û—à–∏–±–∫–∞');
      return;
    }

    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é: " + selectedOrganization);
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –ø–∞—Ä–æ–ª—å: " + password);



    try {
      const response = await fetch('/api/ref/auth/authorize', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ selectedOrganization, password })
      });

      if (!response.ok) {
        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞');
      }

      const data = await response.text();

      alert(data);
      // localStorage.setItem('token', data.token);
      toastr.success('–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!', '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å');
      window.location.href = '/events';
    } catch (err) {
      toastr.error(err.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞', '–û—à–∏–±–∫–∞');
    }
  };





  return (
    <div className="login-page">
      <div className="login-card">
        <div className="login-image">
          <video autoPlay muted loop playsInline>
            <source src="/images/fon.mp4" type="video/mp4" />
            –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.
          </video>
        </div>
        <form className="login-form" onSubmit={handleSubmit}>
          <h2>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>

          <label htmlFor="organization">–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è</label>
          <select
            id="organization"
            value={selectedOrganization}
            onChange={(e) => setSelectedOrganization(e.target.value)}
          >
            <option value="">-- –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é --</option>
            {municipaslOrganizations.map((org) => (
              <option value={org}> {/* key={org.id} */}
                {org}
              </option>
            ))}
          </select>
            
          <input
            type="password"
            placeholder="–ü–∞—Ä–æ–ª—å"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />

          <div className="actions">
            <button type="submit" className="primary-btn">–í–æ–π—Ç–∏</button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default Login;
